---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jeffrey.
--- DateTime: 8/8/24 7:58 PM
---

--- Manages the spawning of enemies

require("mod.enemy_dud")
WaveManager = Object:extend()

_NONE    = 0
_DUD     = 1
_SHOOTER = 2
_END     = 3
_BOSS    = 4

-- Waves
local waves = {
    -- Wave 1
    {
        interval = 2.0,
        spawns = { { _DUD }, { _DUD }, { _NONE }, { _DUD }, { _DUD, _DUD }, { _DUD }, { _NONE },
                   { _DUD }, { _NONE }, { _DUD }, { _DUD }, { _DUD, _DUD }, { _DUD }, { _DUD },
                   { _NONE }, { _DUD, _DUD }, { _DUD }, { _DUD }, { _NONE }, { _NONE }, { _END }}
    },
    -- Wave 2
    {
        interval = 1.75,
        spawns = { { _DUD }, { _DUD, _DUD }, { _DUD, _DUD }, { _DUD }, { _NONE }, { _DUD }, { _DUD },
                   { _DUD }, { _NONE }, { _DUD, _SHOOTER }, { _DUD }, { _DUD, _SHOOTER }, { _NONE }, { _DUD },
                   { _NONE }, { _DUD }, { _DUD }, { _END }}
    }
}

-- Spawn queue holds enemies that will be spawned per micro interval (1/4 wait interval)
local spawn_queue = {}

function WaveManager:new()
    self.interval = 2.0
    self.wait = 0.0
    self.micro_wait = 0.0
    self.wave = 1
    self.wave_pos = 0
end

function WaveManager:update(dt)
    -- Increment wait timer
    self.wait = self.wait + dt
    if self.wait >= self.interval then
        self.spawnEnemy(self)
        self.wait = 0.0
    end

    -- Increment queue timer
    self.micro_wait = self.micro_wait + dt
    if self.micro_wait >= (self.interval / 4) then
        self.processQueue(self)
        self.micro_wait = 0.0
    end
end

-- Increments wave count
function WaveManager:incrementWave()
    self.wave = self.wave + 1
    self.wave_pos = 0
    self.wait = 0.0
end

-- Processes enemy spawn queue
function WaveManager:processQueue()
    for i,v in ipairs(spawn_queue) do
        -- Unpack array into values
        local spawn = v[1]
        local spawn_x = v[2]
        local spawn_y = v[3]

        -- Spawn accordingly
        switch(spawn) {
            [_DUD] = function()
                -- Create dud object
                local d = EnemyDud(spawn_x, spawn_y)
                gEnemies:append(d)
                print("Spawned EnemyDud")
            end,
            [_END] = function()
                -- Set to intermission state
                sfxComplete:play()
                gState = GS_INTERMISSION
            end
        }

        -- Remove entry, break
        table.remove(spawn_queue, 1)
        break
    end
end

-- Queues enemies for spawning
function WaveManager:spawnEnemy()
    -- Increment wave position, spawn enemy
    self.wave_pos = self.wave_pos + 1
    local spawn = waves[self.wave].spawns[self.wave_pos]

    for i,v in ipairs(spawn) do
        -- Determine random spawn
        local spawn_x = SCREEN_X + 12
        local spawn_y = math.max(16, math.min(math.random() * SCREEN_Y, SCREEN_Y - 16))

        -- Add to queue
        table.insert(spawn_queue, {v, spawn_x, spawn_y})
    end
end

